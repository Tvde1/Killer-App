@using Killer_App.Models
@using Killer_App.Models.Home
@model Killer_App.Models.Home.SearchModel

@{
    ViewBag.Title = "Search";
}

@if (Model == null)
{
    <div class="alert alert-danger" style="margin-top: 15px; margin-bottom: 0">
        <p>
            <a class="close" onclick="$('.alert').hide()" aria-label="close">&times;</a>
            <strong>Error!</strong> An error occured when getting data from the controller.
        </p>
    </div>
}
else if (Model.Results == null)
{
    <div class="alert alert-danger" style="margin-top: 15px; margin-bottom: 0">
        <p>
            <a class="close" onclick="$('.alert').hide()" aria-label="close">&times;</a>
            <strong>Error!</strong> An error occured while retrieving info from the database. Click <u>here</u> for more info.
        </p>
    </div>
}
else if (Model?.Results != null && !string.IsNullOrEmpty(Model.SearchText))
{
    <div class="alert alert-success" style="margin-top: 15px; margin-bottom: 0">
        <p>
            <a class="close" onclick="$('.alert').hide()" aria-label="close">&times;</a>
            <strong>Sucess!</strong> The search resulted in @Model.Results.Count results.
        </p>
    </div>
}

<h2>Search</h2>

@using (Html.BeginForm("Search", "Home", FormMethod.Post))
{
    @Html.TextBoxFor(model => model.SearchText)
    @Html.HiddenFor(Model => Model.Provider)

    <button id="BtnSearch" type="submit">Search</button>
}

<select name="CbMode">
    @foreach (var option in Enum.GetNames(typeof(SearchModel.SearchMode)))
    {
        <option>@option</option>
    }
</select>

<script>
    document.getElementById("CbMode").value = @Model?.Mode;
</script>


<hr />

<h2>Results</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Album(s)</th>
            <th>Artists</th>
            <th>Duration</th>
        </tr>
    </thead>
    <tbody>
        @if (Model?.Results != null)
            {
                foreach (var song in Model.Results)
                {
                <tr>
                    <td>
                        @song.Name
                    </td>
                    <td>
                        @if (song.Albums != null)
                        {
                            string.Join(", ", song.Albums.Select(x => x.Name));
                        }
                    </td>
                    <td>
                        @if (song.Artists != null)
                        {
                            string.Join(", ", song.Artists.Select(x => x.UserName));
                        }
                    </td>
                    <td>
                        @song.Duration.ToString(@"mm\:ss")
                    </td>
                </tr>
            }
        }
    </tbody>

</table>